---
version: 0.2
phases:
  install:
    commands:
      - echo 'install step'
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.9/2020-08-04/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
      - aws --version
      - aws sts get-caller-identity
      - kubectl version --short --client
  pre_build:
      commands:
      - echo 'pre_build step'
      - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' hello-k8s.yml
      - docker --version
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - echo 'build step'
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - echo 'post_build step'
      - docker push $REPOSITORY_URI:$TAG
      - printf '[{"name":"hello-k8s","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
artifacts:
  files: build.json
